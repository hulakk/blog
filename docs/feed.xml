<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://hulakk.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hulakk.github.io/blog/" rel="alternate" type="text/html" hreflang="zh-CN" /><updated>2023-04-03T17:41:43+08:00</updated><id>https://hulakk.github.io/blog/feed.xml</id><title type="html">Hulakk’s Personal Blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>hulakk</name></author><entry><title type="html">ARM汇编基础</title><link href="https://hulakk.github.io/blog/%E6%B1%87%E7%BC%96/2023/04/03/ARM%E6%B1%87%E7%BC%96.html" rel="alternate" type="text/html" title="ARM汇编基础" /><published>2023-04-03T00:00:00+08:00</published><updated>2023-04-03T00:00:00+08:00</updated><id>https://hulakk.github.io/blog/%E6%B1%87%E7%BC%96/2023/04/03/ARM%E6%B1%87%E7%BC%96</id><content type="html" xml:base="https://hulakk.github.io/blog/%E6%B1%87%E7%BC%96/2023/04/03/ARM%E6%B1%87%E7%BC%96.html"><![CDATA[<h2 id="整体框架">整体框架</h2>
<pre><code class="language-asm">;文件名：TEST1.S 
;功能：实现两个寄存器相加 
;说明：使用ARMulate软件仿真调试 
        AREA	Example1,CODE,READONLY	  ;声明代码段Example1 
        ENTRY				  ;标识程序入口 
        CODE32				  ;声明32位ARM指令
START 	MOV	R0,#0			  ;设置参数 
 	    MOV	R1,#10
LOOP	BL	ADD_SUB	    	  ;调用子程序ADD_SUB 
	    B	LOOP			  ;跳转到LOOP
ADD_SUB	 
        ADDS	R0,R0,R1      ;R0 = R0 + R1 
        MOV	PC,LR             ;子程序返回 
        END                   ;文件结束 
</code></pre>
<p>说明：
1.注释以“;”开头<br />
2.标号（以上代码中的“START”“LOOP”“ADD_SUB”）定格写<br />
3.以“END”结尾<br />
4.尖括号（“&lt;&gt;”）包含的内容是必须的，花括号（“{}”）包含的内容是可选的</p>

<h2 id="单条指令格式">单条指令格式</h2>
<pre><code class="language-asm">&lt;opcode&gt;    {&lt;cond&gt;}     {S}                    &lt;Rd&gt;        ,&lt;Rn&gt;                   {,&lt;operand2&gt;} 
&lt;指令助记符&gt; {&lt;执行条件&gt;} {是否影响CPSR寄存器的值} &lt;目标寄存器&gt; ,&lt;第一个操作数的寄存器&gt;   {,&lt;第二个操作数&gt;}
</code></pre>

<h2 id="operand2-第二个操作数">&lt;operand2&gt; 第二个操作数</h2>
<p>&lt;operand2&gt;有如下三种形式：</p>
<ul>
  <li>常数表达式形式</li>
  <li>寄存器形式</li>
  <li>寄存器移位形式</li>
</ul>

<h3 id="常数表达式形式immed_8r">常数表达式形式（#immed_8r）</h3>
<p><strong>该常数必须对应8位位图，即必须是一个8位的常数通过循环右移偶数位可以得到的数。</strong><br />
移位前：<code class="language-plaintext highlighter-rouge">00000000 00000000 00000000 xxxxxxxx</code><br />
将这个32位数（除了最后8位都是0）向右循环移位任意偶数位（但要在1轮以内），即得到一个新的32位数（称为<code class="language-plaintext highlighter-rouge">8位图立即数</code>），<strong>将这个32位二进制数写入汇编代码中</strong>。<br />
这样，新的32位数就可以用<code class="language-plaintext highlighter-rouge">8位数值位</code>和<code class="language-plaintext highlighter-rouge">4位移位数</code>组成的12位二进制编码表示。由于用12位二进制编码来表示32位二进制数，因此有些32位二进制数无法被表示。</p>

<p>参考资料：<a href="https://blog.csdn.net/harrymore2011/article/details/6657927">CSDN</a></p>

<h3 id="寄存器形式">寄存器形式</h3>
<p>在寄存器方式下，操作数即为寄存器的数值。</p>
<h3 id="寄存器移位方式">寄存器移位方式</h3>
<p>将寄存器的移位结果作为操作数，但所提到的寄存器本身的值保持不变。<br />
移位方式：</p>

<table>
  <thead>
    <tr>
      <th>操作码</th>
      <th>说明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>ASR #n</td>
      <td>算术右移n位</td>
    </tr>
    <tr>
      <td>LSL #n</td>
      <td>逻辑左移n位</td>
    </tr>
    <tr>
      <td>LSR #n</td>
      <td>逻辑右移n位</td>
    </tr>
    <tr>
      <td>ROR #n</td>
      <td>循环右移n位</td>
    </tr>
    <tr>
      <td>RRX</td>
      <td>带扩展的循环右移1位</td>
    </tr>
    <tr>
      <td>Type Rs</td>
      <td>Type为移位的一种类型，Rs为偏移量寄存器，低8位有效</td>
    </tr>
  </tbody>
</table>

<p>示例：</p>
<pre><code class="language-asm">ADD	R1,R1,R1,LSL #3	;R1=R1+R1*8=9R1 ;“R1,LSL # 3”为一个整体
SUB	R1,R1,R2,LSR R3	;R1=R1-(R2/2^R3) ;“R2,LSR R3”为一个整体
</code></pre>

<h2 id="-条件码"><cond> 条件码</cond></h2>
<p>绝大部分的ARM指令都可以条件执行，而Thumb指令只有B（跳转）指令具有条件执行 功能。如果指令不标明条件代码，将默认为无条件（AL）执行。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">操作码</th>
      <th style="text-align: left">条件助记符</th>
      <th style="text-align: left">标志</th>
      <th style="text-align: left">含义</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">0</td>
      <td style="text-align: left">EQ</td>
      <td style="text-align: left">Z=1</td>
      <td style="text-align: left">相等</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">1</td>
      <td style="text-align: left">NE</td>
      <td style="text-align: left">Z=0</td>
      <td style="text-align: left">不相等</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">10</td>
      <td style="text-align: left">CS/HS</td>
      <td style="text-align: left">C=1</td>
      <td style="text-align: left">无符号数大于或等于</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">11</td>
      <td style="text-align: left">CC/LO</td>
      <td style="text-align: left">C=0</td>
      <td style="text-align: left">无符号数小于</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">100</td>
      <td style="text-align: left">MI</td>
      <td style="text-align: left">N=1</td>
      <td style="text-align: left">负数</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">101</td>
      <td style="text-align: left">PL</td>
      <td style="text-align: left">N=0</td>
      <td style="text-align: left">正数或零</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">110</td>
      <td style="text-align: left">VS</td>
      <td style="text-align: left">V=1</td>
      <td style="text-align: left">溢出</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">111</td>
      <td style="text-align: left">VC</td>
      <td style="text-align: left">V=0</td>
      <td style="text-align: left">没有溢出</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">1000</td>
      <td style="text-align: left">HI</td>
      <td style="text-align: left">C=1</td>
      <td style="text-align: left">Z=0</td>
      <td>无符号数大于</td>
    </tr>
    <tr>
      <td style="text-align: left">1001</td>
      <td style="text-align: left">LS</td>
      <td style="text-align: left">C=0</td>
      <td style="text-align: left">Z=1</td>
      <td>无符号数小于或等于</td>
    </tr>
    <tr>
      <td style="text-align: left">1010</td>
      <td style="text-align: left">GE</td>
      <td style="text-align: left">N=V</td>
      <td style="text-align: left">有符号数大于或等于</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">1011</td>
      <td style="text-align: left">LT</td>
      <td style="text-align: left">N!=V</td>
      <td style="text-align: left">有符号数小于</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">1100</td>
      <td style="text-align: left">GT</td>
      <td style="text-align: left">Z=0</td>
      <td style="text-align: left">N=V</td>
      <td>有符号数大于</td>
    </tr>
    <tr>
      <td style="text-align: left">1101</td>
      <td style="text-align: left">LE</td>
      <td style="text-align: left">Z=1</td>
      <td style="text-align: left">N!=V</td>
      <td>有符号数小于或等于</td>
    </tr>
    <tr>
      <td style="text-align: left">1110</td>
      <td style="text-align: left">AL</td>
      <td style="text-align: left">任何</td>
      <td style="text-align: left">无条件执行(指令默认条件)</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: left">1111</td>
      <td style="text-align: left">NV</td>
      <td style="text-align: left">任何</td>
      <td style="text-align: left">从不执行(不要使用)</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h2 id="arm指令种类">ARM指令种类</h2>
<ul>
  <li>存储器访问指令</li>
  <li>数据处理指令</li>
  <li>乘法指令</li>
  <li>ARM分支指令</li>
  <li>协处理器指令</li>
  <li>杂项指令</li>
  <li>伪指令</li>
</ul>

<h3 id="存储器访问指令">存储器访问指令</h3>
<p>ARM处理器是典型的RISC处理器，对存储器的访问只能使用加载和存储指令实现。<br />
存储器访问指令分为单寄存器操作指令和多寄存器操作指令。<br />
<code class="language-plaintext highlighter-rouge">LDR</code>/<code class="language-plaintext highlighter-rouge">STR</code>指令用于对内存变量的访问、内存缓冲区数据的访问、查表、外围部件的控制操作等。若使用<code class="language-plaintext highlighter-rouge">LDR</code>指令加载数据到PC寄存器，则实现程序跳转功能，这样也就实现了程序散转。</p>

<h4 id="单寄存器">单寄存器</h4>
<p>所有单寄存器加载/存储指令可分为“<strong>字和无符号字节加载存储指令</strong>”和“<strong>半字和有符号字节加载存储指令</strong>”。</p>
<pre><code class="language-asm">LDR &lt;目标寄存器&gt;,&lt;源地址&gt;   ;装载指令(存储器-&gt;寄存器)
STR &lt;源寄存器&gt;,&lt;目标地址&gt;   ;存储指令(寄存器-&gt;存储器)
</code></pre>
<p>LDR/STR指令搭配不同的后缀实现不同方式的单寄存器存取操作:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">助记符</th>
      <th style="text-align: left">说明</th>
      <th style="text-align: left">操作</th>
      <th style="text-align: left">条件码位置</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">LDR Rd,addressing</td>
      <td style="text-align: left">加载字数据</td>
      <td style="text-align: left">Rd←[addressing],addressing索引</td>
      <td style="text-align: left">LDR{cond}</td>
    </tr>
    <tr>
      <td style="text-align: left">LDRB Rd,addressing</td>
      <td style="text-align: left">加载无符号字节数据</td>
      <td style="text-align: left">Rd←[addressing],addressing索引</td>
      <td style="text-align: left">LDR{cond}B</td>
    </tr>
    <tr>
      <td style="text-align: left">LDRT Rd,addressing</td>
      <td style="text-align: left">以用户模式加载字数据</td>
      <td style="text-align: left">Rd←[addressing],addressing索引</td>
      <td style="text-align: left">LDR{cond}T</td>
    </tr>
    <tr>
      <td style="text-align: left">LDRBT Rd,addressing</td>
      <td style="text-align: left">以用户模式加载无符号</td>
      <td style="text-align: left">Rd←[addressing],addressing索引</td>
      <td style="text-align: left">LDR{cond}BT</td>
    </tr>
    <tr>
      <td style="text-align: left">LDRH Rd,addressing</td>
      <td style="text-align: left">加载无符号半字数据</td>
      <td style="text-align: left">Rd←[addressing],addressing索引</td>
      <td style="text-align: left">LDR{cond}H</td>
    </tr>
    <tr>
      <td style="text-align: left">LDRSB Rd,addressing</td>
      <td style="text-align: left">加载有符号字节数据</td>
      <td style="text-align: left">Rd←[addressing],addressing索引</td>
      <td style="text-align: left">LDR{cond}SB</td>
    </tr>
    <tr>
      <td style="text-align: left">LDRSH Rd,addressing</td>
      <td style="text-align: left">加载有符号半字数据</td>
      <td style="text-align: left">Rd←[addressing],addressing索引</td>
      <td style="text-align: left">LDR{cond}SH</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left">助记符</th>
      <th style="text-align: left">说明</th>
      <th style="text-align: left">操作</th>
      <th style="text-align: left">条件码位置</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">STR Rd,addressing</td>
      <td style="text-align: left">存储字数据</td>
      <td style="text-align: left">[addressing]←Rd,addressing索引</td>
      <td style="text-align: left">STR{cond}</td>
    </tr>
    <tr>
      <td style="text-align: left">STRB Rd,addressing</td>
      <td style="text-align: left">存储字节数据</td>
      <td style="text-align: left">[addressing]←Rd,addressing索引</td>
      <td style="text-align: left">STR{cond}B</td>
    </tr>
    <tr>
      <td style="text-align: left">STRT Rd,addressing</td>
      <td style="text-align: left">以用户模式存储字数据</td>
      <td style="text-align: left">[addressing]←Rd,addressing索引</td>
      <td style="text-align: left">STR{cond}T</td>
    </tr>
    <tr>
      <td style="text-align: left">STRBT Rd,addressing</td>
      <td style="text-align: left">以用户模式存储字节数据</td>
      <td style="text-align: left">[addressing]←Rd,addressing索引</td>
      <td style="text-align: left">STR{cond}BT</td>
    </tr>
    <tr>
      <td style="text-align: left">STRH Rd,addressing</td>
      <td style="text-align: left">存储半字数据</td>
      <td style="text-align: left">[addressing]←Rd,addressing索引</td>
      <td style="text-align: left">STR{cond}H</td>
    </tr>
  </tbody>
</table>

<p>规律：</p>
<ol>
  <li>有<code class="language-plaintext highlighter-rouge">B</code>为“字节”数据，有<code class="language-plaintext highlighter-rouge">H</code>的是“半字”数据，都没有则为“字”数据</li>
  <li>有<code class="language-plaintext highlighter-rouge">T</code>则以用户模式加载/存储，否则以特权模式加载/存储</li>
  <li>有<code class="language-plaintext highlighter-rouge">S</code>则为有符号数据，否则为无符号数据</li>
  <li><code class="language-plaintext highlighter-rouge">LDR</code>/<code class="language-plaintext highlighter-rouge">STR</code>最前，条件码在中，后缀在后</li>
</ol>

<h4 id="多寄存器">多寄存器</h4>
<p>多寄存器加载/存储指令可以实现在一组寄存器和一块连续的内存单元之间传输数据。LDM为加载多个寄存器；STM为存储多个寄存器。允许一条指令传送16个寄存器的任何子集或所有寄存器。它们主要用于现场保护、数据复制、常数传递等。</p>
<pre><code class="language-asm">LDM &lt;源地址&gt;,&lt;目标寄存器列表&gt;   ;装载指令(存储器-&gt;寄存器)
STM &lt;目标地址&gt;,&lt;源寄存器列表&gt;  ;存储指令(寄存器-&gt;存储器)
</code></pre>
<p>LDM/STM指令搭配不同的后缀实现不同方式地址增长方式：</p>
<ul>
  <li>IA： 每次传送后地址加4</li>
  <li>IB： 每次传送前地址加4</li>
  <li>DA：每次传送后地址减4</li>
  <li>DB：每次传送前地址减4</li>
</ul>]]></content><author><name>hulakk</name></author><category term="汇编" /><category term="计算机" /><category term="CS" /><category term="汇编" /><category term="嵌入式系统" /><summary type="html"><![CDATA[整体框架 ;文件名：TEST1.S ;功能：实现两个寄存器相加 ;说明：使用ARMulate软件仿真调试 AREA Example1,CODE,READONLY ;声明代码段Example1 ENTRY ;标识程序入口 CODE32 ;声明32位ARM指令 START MOV R0,#0 ;设置参数 MOV R1,#10 LOOP BL ADD_SUB ;调用子程序ADD_SUB B LOOP ;跳转到LOOP ADD_SUB ADDS R0,R0,R1 ;R0 = R0 + R1 MOV PC,LR ;子程序返回 END ;文件结束 说明： 1.注释以“;”开头 2.标号（以上代码中的“START”“LOOP”“ADD_SUB”）定格写 3.以“END”结尾 4.尖括号（“&lt;&gt;”）包含的内容是必须的，花括号（“{}”）包含的内容是可选的]]></summary></entry><entry><title type="html">助词に的用法</title><link href="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E5%8A%A9%E8%AF%8D%E3%81%AB.html" rel="alternate" type="text/html" title="助词に的用法" /><published>2023-03-31T00:00:00+08:00</published><updated>2023-03-31T00:00:00+08:00</updated><id>https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E5%8A%A9%E8%AF%8D%E3%81%AB</id><content type="html" xml:base="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E5%8A%A9%E8%AF%8D%E3%81%AB.html"><![CDATA[<h2 id="用于存在句的地点前">用于存在句的地点前</h2>
<h2 id="表示时间点">表示时间点</h2>
<h2 id="表示动作归着点">表示动作归着点</h2>
<h2 id="表示动作的对方">表示动作的对方</h2>
<p>与<code class="language-plaintext highlighter-rouge">を</code>的区别是：给了某人某物，某人后用<code class="language-plaintext highlighter-rouge">に</code>，某物后用<code class="language-plaintext highlighter-rouge">を</code></p>
<h2 id="表示移动的目的">表示移动的目的</h2>
<p>接在动词连用形（<del>ます</del>形）或动作性名词之后，表示移动行为目的。</p>
<ul>
  <li>週末になると、よく日本へ買い物に行きます。<br />
每逢周末，我都会去日本购物。（“去日本”是为了“购物”）</li>
  <li>いつも図書館へ本を読みに行きます。<br />
我经常去图书馆看书。（“去图书馆”是为了“看书”）</li>
</ul>

<h2 id="表示目的地">表示目的地</h2>
<p>与表示方向、去向的格助词「へ」相比，格助词「に」侧重于强调目的地、到达地点。</p>
<h2 id="表示频率的基数分母">表示频率的基数（分母）</h2>
<p>接在表时间段的数字后，某一时间范围内的数量或次数。</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">一週間に３回</code></li>
  <li><code class="language-plaintext highlighter-rouge">２年に１度</code></li>
</ul>

<h2 id="表示变化的结果">表示变化的结果</h2>
<h2 id="表示比较评价的基准">表示比较、评价的基准</h2>
<h2 id="表示被动句中的动作主体">表示被动句中的动作主体</h2>
<ul>
  <li>雨に降られて風邪を引いた。<br />
淋雨而感冒了。</li>
  <li>友達に笑われました。<br />
我被朋友嘲笑了。</li>
</ul>

<h2 id="参考资料">参考资料</h2>
<p><a href="https://zhuanlan.zhihu.com/p/86052810">日语助词「に」的14种用法总结</a></p>]]></content><author><name>hulakk</name></author><category term="日本語" /><category term="日语" /><summary type="html"><![CDATA[用于存在句的地点前 表示时间点 表示动作归着点 表示动作的对方 与を的区别是：给了某人某物，某人后用に，某物后用を 表示移动的目的 接在动词连用形（ます形）或动作性名词之后，表示移动行为目的。 週末になると、よく日本へ買い物に行きます。 每逢周末，我都会去日本购物。（“去日本”是为了“购物”） いつも図書館へ本を読みに行きます。 我经常去图书馆看书。（“去图书馆”是为了“看书”）]]></summary></entry><entry><title type="html">助词と的用法</title><link href="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E5%8A%A9%E8%AF%8D%E3%81%A8.html" rel="alternate" type="text/html" title="助词と的用法" /><published>2023-03-31T00:00:00+08:00</published><updated>2023-03-31T00:00:00+08:00</updated><id>https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E5%8A%A9%E8%AF%8D%E3%81%A8</id><content type="html" xml:base="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E5%8A%A9%E8%AF%8D%E3%81%A8.html"><![CDATA[<h2 id="表示并列">表示并列</h2>
<p>连接两个名词：<code class="language-plaintext highlighter-rouge">AとB</code> = “A和B”</p>

<h2 id="表示动作的共同参与者">表示动作的共同参与者</h2>
<p>放在表示【共同参与者】的名词之后。<br />
<code class="language-plaintext highlighter-rouge">ｘｘと</code>　＝ “和XX一起”</p>

<h2 id="表示条件">表示条件</h2>
<p>一旦条件满足，结果必然发生。包括自然现象、生理现象、固定习惯、机械操作、社会规则等。</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>【普通形（な形+だ，名词+だ）】と······
</code></pre></div></div>
<p>前面是条件，后面是结果。<br />
结果不可为意志性的。</p>

<p>例句：</p>
<ul>
  <li>春になると桜が咲きます。<br />
春天一到，樱花就开了。</li>
  <li>このつもみを右に回すと 音が大さくなります。<br />
向右转这个旋钮，声音就会变大。</li>
  <li>この予算だと東京都内の賃貸物件は難しい。<br />
这个预算的话，东京都内的出租房子很困难。</li>
  <li>美人やイクメンだと得することが多い。<br />
是美女、帅哥之类的话，吃香得多。</li>
  <li>次の信号を右に曲がると市役所があります。<br />
在下一个红绿灯右转，就有市政厅。</li>
  <li>薬を飲まないと病気は治りませんよ。<br />
不吃药，病就不可能好哦。</li>
</ul>

<h2 id="表示相互动作的对象">表示相互动作的对象</h2>
<p>另一个表示动作的对象的助词是“に”，“と”和“に”的区别在于，“と”用在动作相互进行的场合（A对B进行，B也对A进行，如“争吵”），“に”用在单向动作的场合</p>

<h2 id="表示引用说话思考的内容">表示引用说话、思考的内容</h2>
<h2 id="表示比较的对象或比较的基准">表示比较的对象、或比较的基准</h2>
<h2 id="用来修饰后续的动词相当于汉语中的地">用来修饰后续的动词，相当于汉语中的“地”</h2>
<p>接在副词、名词等之后，用来修饰后续的动词，相当于汉语中的“地”。</p>

<h2 id="参考资料">参考资料</h2>
<p><a href="https://zhuanlan.zhihu.com/p/65320065">高考日语常考助词之「と」的11种用法</a><br />
<a href="https://www.youtube.com/watch?v=9f2BnjvKOW8">【Ｎ４文法】～と（条件）</a></p>]]></content><author><name>hulakk</name></author><category term="日本語" /><category term="日语" /><summary type="html"><![CDATA[表示并列 连接两个名词：AとB = “A和B”]]></summary></entry><entry><title type="html">【动】てくる &amp;amp; 【动】ていく</title><link href="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E3%81%A6%E3%81%84%E3%81%8F&%E3%81%A6%E3%81%84%E3%82%8B.html" rel="alternate" type="text/html" title="【动】てくる &amp;amp; 【动】ていく" /><published>2023-03-31T00:00:00+08:00</published><updated>2023-03-31T00:00:00+08:00</updated><id>https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E3%81%A6%E3%81%84%E3%81%8F&amp;%E3%81%A6%E3%81%84%E3%82%8B</id><content type="html" xml:base="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/31/%E3%81%A6%E3%81%84%E3%81%8F&amp;%E3%81%A6%E3%81%84%E3%82%8B.html"><![CDATA[<h2 id="表示一直持续的变化">表示一直持续的变化</h2>
<p>【动】てくる/【动】ていく<br />
过去到现在持续的变化用てくる，现在到将来持续的变化用ていく</p>

<p>例子：</p>
<ul>
  <li>
    <p>少子化が進んで、日本の人口はだんだん減っていくでしょう。<br />
孩子减少现象日益加剧，日本的人口将会越来越少吧。</p>
  </li>
  <li>
    <p>最近、中国へ旅行に行く日本人が増えてきましたね。<br />
最近，到中国旅行的日本人躲起来了。</p>
  </li>
  <li>
    <p>20年間ずっと日本語を勉強してきました。<br />
这20年我一直在学日语。</p>
  </li>
  <li>
    <p>これからもずっと日本語を勉強しでいきます。<br />
今后我也要一直坚持学日语。</p>
  </li>
</ul>

<h2 id="状态出现">状态出现</h2>
<p>“【动】てくる”还有表示某种状态的开始或出现的用法，前面的动词只能是非意志动词。</p>

<ul>
  <li>
    <p>ずっと本を読んでいたので、目が疲れてきました。<br />
一直在看书，眼睛累了。</p>
  </li>
  <li>
    <p>お母さん、雨が降ってきます。<br />
妈妈，开始下雨了。</p>
  </li>
  <li>
    <p>お腹が空いてきたんですが、そろそろ食事に行きませんか。<br />
肚子有点饿了，咱们去吃饭好吗？</p>
  </li>
</ul>]]></content><author><name>hulakk</name></author><category term="日本語" /><category term="日语" /><summary type="html"><![CDATA[表示一直持续的变化 【动】てくる/【动】ていく 过去到现在持续的变化用てくる，现在到将来持续的变化用ていく]]></summary></entry><entry><title type="html">博客管理</title><link href="https://hulakk.github.io/blog/%E5%8D%9A%E5%AE%A2%E7%AE%A1%E7%90%86/2023/03/30/hello-world.html" rel="alternate" type="text/html" title="博客管理" /><published>2023-03-30T00:00:00+08:00</published><updated>2023-03-30T00:00:00+08:00</updated><id>https://hulakk.github.io/blog/%E5%8D%9A%E5%AE%A2%E7%AE%A1%E7%90%86/2023/03/30/hello-world</id><content type="html" xml:base="https://hulakk.github.io/blog/%E5%8D%9A%E5%AE%A2%E7%AE%A1%E7%90%86/2023/03/30/hello-world.html"><![CDATA[<h2 id="这是什么">这是什么？</h2>

<p>这是我的个人博客网站，我希望它能够见证我的成长，以及帮我巩固学过的知识</p>

<h2 id="编译说明">编译说明</h2>
<h3 id="windows">Windows</h3>
<h4 id="本地测试">本地测试</h4>
<div class="language-bat highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">bundle</span> <span class="kd">exec</span> <span class="kd">jekyll</span> <span class="kd">serve</span> <span class="na">-P </span><span class="m">50000</span>
</code></pre></div></div>
<p>结果显示在<a href="http://localhost::50000/blog/"><code class="language-plaintext highlighter-rouge">http://localhost::50000/blog/</code></a></p>
<h4 id="只构建">只构建</h4>
<div class="language-bat highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">jekyll</span> <span class="kd">build</span>
</code></pre></div></div>

<h2 id="git快捷提交使用日期作为日志">git快捷提交（使用日期作为日志）</h2>

<h3 id="windows-1">Windows</h3>
<p>CMD：
使用环境变量<code class="language-plaintext highlighter-rouge">%date%</code>和<code class="language-plaintext highlighter-rouge">%time%</code></p>
<div class="language-bat highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">git</span> <span class="kd">commit</span> <span class="na">-m </span><span class="s2">"</span><span class="nv">%date%</span><span class="s2"> </span><span class="nv">%time%</span><span class="s2">"</span>
</code></pre></div></div>
<p>Powershell:
使用<code class="language-plaintext highlighter-rouge">date</code>命令的输出</p>
<pre><code class="language-ps1">$d=date
git commit -m "$d"
</code></pre>

<h3 id="linux">Linux</h3>
<p>使用<code class="language-plaintext highlighter-rouge">date</code>命令的输出</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git commit <span class="nt">-m</span> <span class="s2">"</span><span class="si">$(</span><span class="nb">date</span><span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>]]></content><author><name>hulakk</name></author><category term="博客管理" /><summary type="html"><![CDATA[这是什么？]]></summary></entry><entry><title type="html">尊他语</title><link href="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/29/%E5%B0%8A%E4%BB%96%E8%AF%AD.html" rel="alternate" type="text/html" title="尊他语" /><published>2023-03-29T00:00:00+08:00</published><updated>2023-03-29T00:00:00+08:00</updated><id>https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/29/%E5%B0%8A%E4%BB%96%E8%AF%AD</id><content type="html" xml:base="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/29/%E5%B0%8A%E4%BB%96%E8%AF%AD.html"><![CDATA[<h3 id="敬语分类">敬语分类</h3>
<p>尊他语：抬高会话内容中的人物<br />
自谦语：压低说话人自身或说话人一方<br />
礼貌语：对听话人的敬意</p>

<h3 id="尊他语">尊他语</h3>
<ul>
  <li>
    <p>（1）第一种变形：动词的被动态可以直接作为尊他语
“被动态”即“受身形”</p>
  </li>
  <li>
    <p>（2）第二种变形（只适用于一类、二类动词）：
一类动词/二类动词： お【动（~ます~形）】になる<br />
三类动词没有这种变形法</p>
  </li>
  <li>
    <p>（3）约定俗成<br />
見る　ーー　ご覧になる<br />
食べる　ーー　召し上がる<br />
飲む　ーー　召し上がる<br />
行く　ーー　いらっしゃる<br />
来る　ーー　いらっしゃる<br />
いる　ーー　しらっしゃる<br />
する　ーー　なさる<br />
言う　ーー　おっしゃる<br />
くれる　ーー　くださる<br />
～ている　ーー　～ていあらしゃる<br />
～てくれる　ーー　～てくださる</p>
  </li>
</ul>

<h3 id="ください">ください</h3>
<ul>
  <li>お【一类动/二类动（~ます~形）】ください</li>
  <li>ご【三类动（~ます~形）】ください<br />
劝说听话人做某事，“请做某事”</li>
</ul>]]></content><author><name>hulakk</name></author><category term="日本語" /><category term="日语" /><summary type="html"><![CDATA[敬语分类 尊他语：抬高会话内容中的人物 自谦语：压低说话人自身或说话人一方 礼貌语：对听话人的敬意]]></summary></entry><entry><title type="html">自谦语</title><link href="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/29/%E8%87%AA%E8%B0%A6%E8%AF%AD.html" rel="alternate" type="text/html" title="自谦语" /><published>2023-03-29T00:00:00+08:00</published><updated>2023-03-29T00:00:00+08:00</updated><id>https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/29/%E8%87%AA%E8%B0%A6%E8%AF%AD</id><content type="html" xml:base="https://hulakk.github.io/blog/%E6%97%A5%E6%9C%AC%E8%AA%9E/2023/03/29/%E8%87%AA%E8%B0%A6%E8%AF%AD.html"><![CDATA[<h3 id="动词的自谦语形式">动词的自谦语形式</h3>
<p>一类动词/二类动词： お【动（~ます~形）】する<br />
三类动词：　　　　　ご【动（~ます~形）】する</p>

<h3 id="约定俗成的自谦语">约定俗成的自谦语</h3>
<p>有些动词的自谦语有专门的替代词<br />
見る　ーー　拝見する<br />
食べる　ーー　いただく<br />
飲む　ーー　いただく<br />
行く　ーー　参る/伺う<br />
聞く　ーー　伺う<br />
する　ーー　いたす<br />
言う　ーー　申す<br />
あげる　ーー　差し上げる<br />
もらう　ーー　いただく<br />
知っている　ーー　存じている<br />
～てあげる　ーー　～て差し上げる<br />
～てもらう　ーー　～ていただく</p>

<h3 id="动ていただけますか">【动】ていただけますか</h3>
<p>结尾的“ますか”也可换成“ませんか”<br />
“能请您做某事吗”</p>

<h3 id="动使役形ていただきます">【动（使役形）】ていただきます</h3>
<p>类似于动词的自谦语，自谦程度更甚</p>

<h3 id="动词以外的敬语形式">动词以外的敬语形式</h3>

<ul>
  <li>
    <p>名词美化语
日语固有词前加“お”，汉字词前加“ご”</p>
  </li>
  <li>
    <p>形容词尊他语
日语固有词前加“お”，汉字词前加“ご”</p>
  </li>
  <li>
    <p>名词自谦语
这些对应都是固定的，以下仅为举例：<br />
わたし　ーー　わたくし<br />
会社　ーー　社<br />
わたしたち　ーー　わたくしども<br />
人（ひと）　ーー　者（もの）</p>
  </li>
</ul>

<h3 id="ございます">ございます</h3>
<p>”あります“ 的礼貌用法　ーー　ございます<br />
“です”的礼貌用法　ーー　でございます</p>

<h3 id="おります">おります</h3>
<p>”います“ 的礼貌用法　ーー　おります<br />
“ています”的礼貌用法　ーー　ております</p>]]></content><author><name>hulakk</name></author><category term="日本語" /><category term="日语" /><summary type="html"><![CDATA[动词的自谦语形式 一类动词/二类动词： お【动（~ます~形）】する 三类动词：　　　　　ご【动（~ます~形）】する]]></summary></entry></feed>